<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.4</version> <!-- Define la versiÃ³n de Spring Boot -->
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>com.shopi.shopping</groupId>
  <artifactId>ShopiShopping</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>ShopiShopping</name>
  <description>A shopping application</description>

  <properties>
    <java.version>17</java.version>
  </properties>

  <dependencies>
    <!-- Spring Boot Starters -->

    <!-- Starter for Spring Data JPA for database access using JPA and Hibernate -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <!-- Starter for Spring Security to secure the application -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <!-- Starter for building web applications, including REST APIs -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Spring Boot DevTools to enable live reload and other development features -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional> <!-- Optional to avoid including it in production -->
    </dependency>

    <!-- In-memory H2 database for testing and development -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope> <!-- Only included at runtime -->
    </dependency>

    <!-- Lombok for reducing boilerplate code with annotations like @Getter, @Setter, etc. -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional> <!-- Optional because it is used only during development -->
    </dependency>

    <!-- Dependencies for testing -->

    <!-- Spring Boot starter for unit tests and integration tests -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope> <!-- Only included in the test scope -->
    </dependency>

    <!-- Spring Security test utilities for mocking authentication and authorization -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Logging dependencies: SLF4J and Logback (Spring Boot manages the versions) -->

    <!-- Spring Boot logging starter, including SLF4J and Logback -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>

    <!-- SLF4J API for logging abstraction -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- Logback implementation for SLF4J -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <!-- JUnit 5 for testing (Spring Boot manages the version) -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Mockito for mocking objects in unit tests (Spring Boot manages the version) -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- TestNG for additional testing capabilities -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.10.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Springdoc OpenAPI for generating OpenAPI documentation for Spring MVC applications -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>2.5.0</version>
    </dependency>

    <!-- Starter for using Thymeleaf as a template engine in Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>

    <!-- Jackson module for handling Java 8 date and time APIs -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>

    <!-- Spring Boot Actuator for monitoring and managing applications -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-actuator-autoconfigure</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>6.1.13</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>




  </dependencies>



  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
        <configuration>
          <excludes>
            <exclude>com/shopi/shopping/interfaces/**</exclude>
            <exclude>com/shopi/shopping/models/**</exclude>
            <exclude>com/shopi/shopping/ShoppingApp/**</exclude>
            <exclude>com/shopi/shopping/services/facades/**</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- Plugin to compile Java source code -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <!-- Java version to use for compiling (source) and generating bytecode (target) -->
          <source>17</source> <!-- Compile using Java 17 -->
          <target>17</target> <!-- Generate bytecode compatible with Java 17 -->

          <compilerArgs>
            <!-- Enable compilation warnings for unchecked or unsafe operations -->
            <arg>-Xlint:unchecked</arg>
          </compilerArgs>
        </configuration>
      </plugin>


    </plugins>
  </build>


</project>
